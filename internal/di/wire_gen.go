// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/Alfian57/belajar-golang/internal/handler"
	"github.com/Alfian57/belajar-golang/internal/repository"
	"github.com/Alfian57/belajar-golang/internal/service"
)

// Injectors from wire.go:

func InitializeAuthHandler() *handler.AuthHandler {
	userRepository := repository.NewUserRepository()
	refreshTokenRepository := repository.NewRefreshTokenRepository()
	authService := service.NewAuthService(userRepository, refreshTokenRepository)
	authHandler := handler.NewAuthHandler(authService)
	return authHandler
}

func InitializeUserHandler() *handler.UserHandler {
	userRepository := repository.NewUserRepository()
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService)
	return userHandler
}

func InitializeUrlHandler() *handler.UrlHandler {
	urlRepository := repository.NewUrlRepository()
	userRepository := repository.NewUserRepository()
	urlService := service.NewUrlService(urlRepository, userRepository)
	urlHandler := handler.NewUrlHandler(urlService)
	return urlHandler
}

func InitializeUrlVisitorHandler() *handler.UrlVisitorHandler {
	urlVisitorRepository := repository.NewUrlVisitorRepository()
	urlRepository := repository.NewUrlRepository()
	urlVisitorService := service.NewUrlVisitorService(urlVisitorRepository, urlRepository)
	urlVisitorHandler := handler.NewUrlVisitorHandler(urlVisitorService)
	return urlVisitorHandler
}

func InitializeBannedDomainHandler() *handler.BannedDomainHandler {
	bannedDomainRepository := repository.NewBannedDomainRepository()
	bannedDomainService := service.NewBannedDomainService(bannedDomainRepository)
	bannedDomainHandler := handler.NewBannedDomainHandler(bannedDomainService)
	return bannedDomainHandler
}

func InitializeUserService() *service.UserService {
	userRepository := repository.NewUserRepository()
	userService := service.NewUserService(userRepository)
	return userService
}
